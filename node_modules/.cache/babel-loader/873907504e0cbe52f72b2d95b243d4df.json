{"ast":null,"code":"var _jsxFileName = \"/Users/vsai23/Workspace/MilkBankOptimizer/src/pages/Entry.js\",\n    _s = $RefreshSig$();\n\nimport NewForm from \"../components/form/NewForm\";\nimport { useState } from 'react';\nimport './Entry.css';\nimport { useNavigate } from 'react-router-dom';\nimport Hyperform from \"../components/Hyperform/Hyperform.js\";\nimport Results from \"../components/results/Results.js\";\nimport Result from \"../pages/Result.js\";\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Entry() {\n  _s();\n\n  let showResults = false;\n  const [forms, setForms] = useState([{\n    formId: 0\n  }]);\n\n  const addForm = () => {\n    setForms(prevForms => [...prevForms, {\n      formId: forms.length\n    }]);\n    console.log(forms.length);\n  };\n\n  const handleCallbackUpdate = (form, index) => {\n    let newForms = [...forms];\n    newForms[index] = form;\n    setForms(newForms);\n  };\n\n  const handleCallbackDelete = index => {\n    let newForms = [...forms];\n    newForms.pop(index);\n    newForms.forEach((form, i) => {\n      form.formId = i;\n    });\n    setForms(newForms);\n  };\n\n  if (showResults) {\n    return /*#__PURE__*/_jsxDEV(Results, {\n      data: forms\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(Hyperform, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Add New Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), forms.map(form => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(NewForm, {\n          parentCallbackUpdate: handleCallbackUpdate,\n          parentCallbackDelete: handleCallbackDelete,\n          formId: form.formId,\n          depositId: form.depositId,\n          fat: form.fat,\n          protein: form.protein,\n          lactose: form.lactose,\n          kcal: form.kcal,\n          volume: form.volume\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addForm,\n          children: \"Add Entry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Results, {\n        data: forms\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this);\n  }\n}\n\n_s(Entry, \"SfAiwt7LqekNqtXoQ4V0JxIQtzk=\");\n\n_c = Entry;\nexport default Entry;\n\nvar _c;\n\n$RefreshReg$(_c, \"Entry\");","map":{"version":3,"sources":["/Users/vsai23/Workspace/MilkBankOptimizer/src/pages/Entry.js"],"names":["NewForm","useState","useNavigate","Hyperform","Results","Result","Link","Entry","showResults","forms","setForms","formId","addForm","prevForms","length","console","log","handleCallbackUpdate","form","index","newForms","handleCallbackDelete","pop","forEach","i","map","depositId","fat","protein","lactose","kcal","volume"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,4BAApB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,OAAO,aAAP;AACA,SAAQC,WAAR,QAA0B,kBAA1B;AACA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AAEA,SAASC,IAAT,QAAqB,kBAArB;;;AAGA,SAASC,KAAT,GAAgB;AAAA;;AAEZ,MAAIC,WAAW,GAAG,KAAlB;AAEA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,CAAC;AAACU,IAAAA,MAAM,EAAE;AAAT,GAAD,CAAD,CAAlC;;AACA,QAAMC,OAAO,GAAG,MAAM;AAClBF,IAAAA,QAAQ,CAAGG,SAAD,IAAe,CAAC,GAAGA,SAAJ,EAAe;AAACF,MAAAA,MAAM,EAAEF,KAAK,CAACK;AAAf,KAAf,CAAjB,CAAR;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYP,KAAK,CAACK,MAAlB;AACH,GAHD;;AAKA,QAAMG,oBAAoB,GAAG,CAACC,IAAD,EAAOC,KAAP,KAAgB;AACzC,QAAIC,QAAQ,GAAG,CAAC,GAAGX,KAAJ,CAAf;AACAW,IAAAA,QAAQ,CAACD,KAAD,CAAR,GAAkBD,IAAlB;AACAR,IAAAA,QAAQ,CAACU,QAAD,CAAR;AACH,GAJD;;AAKA,QAAMC,oBAAoB,GAAIF,KAAD,IAAW;AACpC,QAAIC,QAAQ,GAAG,CAAC,GAAGX,KAAJ,CAAf;AAEAW,IAAAA,QAAQ,CAACE,GAAT,CAAaH,KAAb;AAEAC,IAAAA,QAAQ,CAACG,OAAT,CAAkB,CAACL,IAAD,EAAOM,CAAP,KAAa;AAC3BN,MAAAA,IAAI,CAACP,MAAL,GAAca,CAAd;AACH,KAFD;AAIAd,IAAAA,QAAQ,CAACU,QAAD,CAAR;AACH,GAVD;;AAYA,MAAIZ,WAAJ,EAAiB;AACb,wBACI,QAAC,OAAD;AAAS,MAAA,IAAI,EAAEC;AAAf;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH,GAJD,MAKK;AACD,wBAAQ;AAAA,8BACJ,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cADI,eAEJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFI,EAIHA,KAAK,CAACgB,GAAN,CAAYP,IAAD,iBACZ;AAAA,gCACI,QAAC,OAAD;AACA,UAAA,oBAAoB,EAAED,oBADtB;AAEA,UAAA,oBAAoB,EAAEI,oBAFtB;AAGA,UAAA,MAAM,EAAEH,IAAI,CAACP,MAHb;AAIA,UAAA,SAAS,EAAEO,IAAI,CAACQ,SAJhB;AAKA,UAAA,GAAG,EAAER,IAAI,CAACS,GALV;AAMA,UAAA,OAAO,EAAET,IAAI,CAACU,OANd;AAOA,UAAA,OAAO,EAAEV,IAAI,CAACW,OAPd;AAQA,UAAA,IAAI,EAAEX,IAAI,CAACY,IARX;AASA,UAAA,MAAM,EAAEZ,IAAI,CAACa;AATb;AAAA;AAAA;AAAA;AAAA,gBADJ,eAWI;AAAA;AAAA;AAAA;AAAA,gBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADC,CAJG,eAsBA;AAAA,+BACQ;AAAS,UAAA,OAAO,EAAGnB,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA,cAtBA,eA2BJ,QAAC,OAAD;AAAS,QAAA,IAAI,EAAEH;AAAf;AAAA;AAAA;AAAA;AAAA,cA3BI;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;AAiCH;AAIJ;;GAtEQF,K;;KAAAA,K;AAwET,eAAeA,KAAf","sourcesContent":["import NewForm from \"../components/form/NewForm\";\nimport {useState} from 'react';\nimport './Entry.css';\nimport {useNavigate} from 'react-router-dom';\nimport Hyperform from \"../components/Hyperform/Hyperform.js\"\nimport Results from \"../components/results/Results.js\"\nimport Result from \"../pages/Result.js\"\n\nimport { Link } from 'react-router-dom'\n\n\nfunction Entry(){\n\n    let showResults = false;\n\n    const [forms, setForms] = useState([{formId: 0}]);\n    const addForm = () => {\n        setForms( (prevForms) => [...prevForms, {formId: forms.length}])\n        console.log(forms.length)\n    }\n\n    const handleCallbackUpdate = (form, index) =>{\n        let newForms = [...forms];\n        newForms[index] = form;\n        setForms(newForms);\n    }\n    const handleCallbackDelete = (index) => {\n        let newForms = [...forms];\n\n        newForms.pop(index);\n\n        newForms.forEach( (form, i) => {\n            form.formId = i\n        });\n\n        setForms(newForms);\n    }\n\n    if (showResults) {\n        return (\n            <Results data={forms} />\n        )\n    }\n    else {\n        return (<section>\n            <Hyperform  />\n            <h1>Add New Form</h1>\n\n            {forms.map( (form) => (\n            <div>\n                <NewForm \n                parentCallbackUpdate={handleCallbackUpdate} \n                parentCallbackDelete={handleCallbackDelete}\n                formId={form.formId}\n                depositId={form.depositId}\n                fat={form.fat}\n                protein={form.protein}\n                lactose={form.lactose}\n                kcal={form.kcal}\n                volume={form.volume} />\n                <p>{}</p>\n            </div>\n            ))}\n\n                  \n     \n                <div>\n                        <button  onClick ={addForm}>Add Entry</button>\n                </div>\n                {/* <button type='button' onClick={(e) => {alert(JSON.stringify(forms, '', 2))}}>Debug</button> */}\n\n            <Results data={forms} />\n            \n\n        </section>\n\n    );\n    }\n\n\n    \n}\n\nexport default Entry;\n"]},"metadata":{},"sourceType":"module"}